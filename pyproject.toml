[project]
name = "udata"
description = "Customizable and skinnable social platform dedicated to (open) data"
keywords = ["udata opendata portal data"]
authors = [{ name = "Opendata Team", email = "opendatateam@data.gouv.fr" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Software Distribution",
]
dependencies = [
    "Babel==2.12.1",
    "Faker==3.0.0",
    "Flask==2.1.2",
    "Flask-CDN==1.5.3",
    "Flask-Caching==2.0.2",
    "Flask-Cors==3.0.8",
    "Flask-Gravatar==0.5.0",
    "Flask-Login==0.6.2",
    "Flask-Mail==0.9.1",
    "Flask-Security-Too==5.1.2",
    "Flask-Sitemap==0.4.0",
    "Flask-WTF==1.0.1",
    "Jinja2==3.1.2",
    "StringDist==1.0.9",
    "authlib==0.14.3",
    "awesome-slugify==1.6.5",
    "bcrypt==3.1.7",
    "bleach==3.3.1",
    "blinker==1.4",
    "boto3>=1.26",
    "celery==5.3.1",
    "celerybeat-mongo==0.2.0",
    "click==8.1.2",
    "cryptography==42.0.8",
    "factory-boy==2.12.0",
    "flask-babel==4.0.0",
    "flask-mongoengine==1.0.0",
    "flask-navigation-temp-python-311==0.2.1",
    "flask-restx==1.0.5",
    "flask-storage==1.3.2",
    "geojson==2.5.0",
    "geomet==1.1.0",
    "html2text==2019.9.26",
    "kombu[redis]==5.3.1",
    "langdetect==1.0.9",
    "lxml==4.9.3",
    "mistune==0.8.4",
    "mongoengine==0.27.0",
    "netaddr==0.7.19",
    "pydenticon==0.3.1",
    "pymongo==4.3.3",
    "python-dateutil==2.8.2",
    "pytz==2024.1",
    "rdflib==6.0.0",
    "redis==4.5.2",
    "requests==2.24.0",
    "speaklater==1.3",
    "tlds",
    "urlextract==0.14.0",
    "voluptuous==0.11.7",
    "werkzeug==2.2.2",
    "wtforms==3.0.1",
    "wtforms-json==0.3.5",
]
readme = "README.md"
requires-python = ">= 3.9"
license = { file = "LICENSE" }
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/opendatateam/udata"

[project.scripts]
udata = "udata.commands:cli"

[project.entry-points]
[project.entry-points.pytest11]
udata = "udata.tests.plugin"

[project.entry-points."udata.avatars"]
adorable = "udata.features.identicon.backends:adorable"
internal = "udata.features.identicon.backends:internal"
robohash = "udata.features.identicon.backends:robohash"

[project.entry-points."udata.harvesters"]
csw-dcat = "udata.harvest.backends.dcat:CswDcatBackend"
csw-iso-19139 = "udata.harvest.backends.dcat:CswIso19139DcatBackend"
dcat = "udata.harvest.backends.dcat:DcatBackend"

[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[tool.distutils.compile_catalog]
domain = "udata"
directory = "udata/translations"
statistics = true

[tool.distutils.extract_messages]
keywords = "_ N_:1,2 P_:1c,2 L_ gettext ngettext:1,2 pgettext:1c,2 npgettext:1c,2,3 lazy_gettext lazy_pgettext:1c,2"
mapping-file = "babel.cfg"
add-comments = "TRANSLATORS:"
output-file = "udata/translations/udata.pot"
width = 80

[tool.distutils.init_catalog]
domain = "udata"
input-file = "udata/translations/udata.pot"
output-dir = "udata/translations"

[tool.distutils.update_catalog]
domain = "udata"
input-file = "udata/translations/udata.pot"
output-dir = "udata/translations"
previous = true

[tool.pytest.ini_options]
norecursedirs = [
    ".git",
    "build",
    ".tox",
    "specs",
    ".cache",
    "udata/static",
    "udata/templates",
    "udata/translations",
]
python_files = ["test_*.py"]
python_functions = ["test_*"]
python_classes = ["*Test"]
env = """
# See: https://docs.authlib.org/en/latest/flask/oauth2.html
AUTHLIB_INSECURE_TRANSPORT=true"""
mock_use_standalone_module = true
# See: https://docs.pytest.org/en/latest/warnings.html#deprecationwarning-and-pendingdeprecationwarning
filterwarnings = ["ignore::DeprecationWarning:mongoengine"]
# See: https://docs.pytest.org/en/latest/example/markers.html#registering-markers
markers = [
    "frontend: load the frontend stack",
    "preview: mock a preview backend",
    "oauth: inject an OAuth client",
]

[tool.ruff]
lint = { select = ["I"] } # also sort imports with an isort rule
line-length = 100

[tool.rye]
managed = true
dev-dependencies = []

[tool.setuptools]
include-package-data = false
packages = ["udata", "tasks"]
