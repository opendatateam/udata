{"basePath": "/api/1", "consumes": ["application/json"], "definitions": {"Crontab": {"properties": {"day_of_month": {"default": "*", "description": "Cron expression for day of month", "type": "string"}, "day_of_week": {"default": "*", "description": "Cron expression for day of week", "type": "string"}, "hour": {"default": "*", "description": "Cron expression for hour", "type": "string"}, "minute": {"default": "*", "description": "Cron expression for minute", "type": "string"}, "month_of_year": {"default": "*", "description": "Cron expression for month of year", "type": "string"}}, "required": ["day_of_month", "minute", "hour", "day_of_week", "month_of_year"]}, "Dataset": {"properties": {"community_resources": {"description": "The dataset community submitted resources", "items": {"$ref": "#/definitions/Resource"}, "type": "array"}, "created_at": {"description": "The dataset creation date", "format": "date-time", "type": "string"}, "deleted": {"description": "The deletion date if deleted", "format": "date-time", "type": "string"}, "description": {"description": "The dataset description in markdown", "type": "string"}, "extras": {"description": "Extras attributes as key-value pairs", "type": "object"}, "featured": {"description": "Is the dataset featured", "type": "boolean"}, "frequency": {"description": "The update frequency", "enum": ["bimonthly", "punctual", "quinquennial", "biannual", "weekly", "fortnighly", "realtime", "monthly", "unknown", "annual", "daily", "biennial", "quarterly", "triennial"], "type": "string"}, "id": {"description": "The dataset identifier", "type": "string"}, "last_modified": {"description": "The dataset last modification date", "format": "date-time", "type": "string"}, "license": {"description": "The dataset license", "type": "string"}, "metrics": {"description": "The dataset metrics", "type": "object"}, "organization": {"$ref": "#/definitions/OrganizationReference", "description": "The producer organization"}, "page": {"description": "The dataset page URL", "type": "object"}, "resources": {"description": "The dataset resources", "items": {"$ref": "#/definitions/Resource"}, "type": "array"}, "slug": {"description": "The dataset permalink string", "type": "string"}, "spatial": {"$ref": "#/definitions/SpatialCoverage", "description": "The spatial coverage"}, "supplier": {"$ref": "#/definitions/OrganizationReference", "description": "The supplyer organization (if different from the producer)"}, "tags": {"items": {"type": "string"}, "type": "array"}, "temporal_coverage": {"$ref": "#/definitions/TemporalCoverage", "description": "The temporal coverage"}, "title": {"description": "The dataset title", "type": "string"}, "uri": {"description": "The dataset API URI", "type": "object"}}, "required": ["description", "last_modified", "slug", "title", "created_at", "uri", "id", "frequency", "page"]}, "DatasetPage": {"properties": {"data": {"description": "The page data", "items": {"$ref": "#/definitions/Dataset"}, "type": "array"}, "next_page": {"description": "The next page URL if exists", "type": "string"}, "page": {"description": "The current page", "minimum": 0, "type": "integer"}, "page_size": {"description": "The page size used for pagination", "minimum": 0, "type": "integer"}, "previous_page": {"description": "The previous page URL if exists", "type": "string"}, "total": {"description": "The total paginated items", "minimum": 0, "type": "integer"}}, "required": ["total", "page", "page_size"]}, "DatasetReference": {"properties": {"id": {"description": "The dataset unique identifier", "type": "string"}, "page": {"description": "The web page URL for this dataset", "type": "string"}, "title": {"description": "The dataset title", "type": "string"}, "uri": {"description": "The API URI for this dataset", "type": "string"}}, "required": ["uri", "id", "page", "title"]}, "DatasetSuggestion": {"properties": {"id": {"description": "The dataset identifier", "type": "string"}, "image_url": {"description": "The dataset (organization) logo URL", "type": "string"}, "score": {"description": "The internal match score", "type": "number"}, "slug": {"description": "The dataset permalink string", "type": "string"}, "title": {"description": "The dataset title", "type": "string"}}, "required": ["title", "score", "slug", "id"]}, "GeoJSON": {"properties": {"coordinates": {"description": "The geometry as coordinates lists", "items": {"type": "object"}, "type": "array"}, "type": {"description": "The GeoJSON Type", "enum": ["Point", "LineString", "Polygon", "MultiPoint", "MultiLineString", "MultiPolygon"], "type": "string"}}, "required": ["type", "coordinates"]}, "GeoJSONFeature": {"properties": {"geometry": {"$ref": "#/definitions/GeoJSON"}, "id": {"type": "string"}, "properties": {"type": "object"}, "type": {"enum": ["Feature"], "type": "string"}}, "required": ["geometry", "type"]}, "GeoJSONFeatureCollection": {"properties": {"features": {"items": {"$ref": "#/definitions/GeoJSONFeature"}, "type": "array"}, "type": {"enum": ["FeatureCollection"], "type": "string"}}, "required": ["type"]}, "HarvestError": {"properties": {"created_at": {"description": "The error creation date", "format": "date-time", "type": "string"}, "details": {"description": "Optional details (ie. stacktrace)", "type": "string"}, "message": {"description": "The error short message", "type": "string"}}, "required": ["created_at", "message"]}, "HarvestItem": {"properties": {"args": {"description": "The item positional arguments", "items": {"type": "string"}, "type": "array"}, "created": {"description": "The item creation date", "format": "date-time", "type": "string"}, "ended": {"description": "The item end date", "format": "date-time", "type": "string"}, "errors": {"description": "The item errors", "items": {"$ref": "#/definitions/HarvestError"}, "type": "array"}, "kwargs": {"description": "The item keyword arguments", "type": "object"}, "remote_id": {"description": "The item remote ID to process", "type": "string"}, "started": {"description": "The item start date", "format": "date-time", "type": "string"}, "status": {"description": "The item status", "enum": ["pending", "started", "done", "failed"], "type": "string"}}, "required": ["status", "created", "remote_id"]}, "HarvestJob": {"properties": {"created": {"description": "The job creation date", "format": "date-time", "type": "string"}, "ended": {"description": "The job end date", "format": "date-time", "type": "string"}, "errors": {"description": "The job initialization errors", "items": {"$ref": "#/definitions/HarvestError"}, "type": "array"}, "id": {"description": "The job execution ID", "type": "string"}, "items": {"description": "The job items", "items": {"$ref": "#/definitions/HarvestItem"}, "type": "array"}, "started": {"description": "The job start date", "format": "date-time", "type": "string"}, "status": {"description": "The job status", "enum": ["pending", "initializing", "initialized", "processing", "done", "done-errors", "failed"], "type": "string"}}, "required": ["status", "created", "id"]}, "HarvestSource": {"properties": {"active": {"description": "Is this source active", "type": "boolean"}, "args": {"description": "The job execution arguments", "items": {"type": "object"}, "type": "array"}, "backend": {"description": "The source backend", "enum": ["dummy"], "type": "string"}, "config": {"description": "The configuration as key-value pairs", "type": "object"}, "created_at": {"description": "The source creation date", "format": "date-time", "type": "string"}, "description": {"description": "The source description", "type": "string"}, "id": {"description": "The source unique identifier", "type": "string"}, "kwargs": {"description": "The job execution keyword arguments", "type": "object"}, "name": {"description": "The source display name", "type": "string"}, "url": {"description": "The source base URL", "type": "string"}}, "required": ["name", "url", "created_at", "active", "id", "backend"]}, "Interval": {"properties": {"every": {"description": "The interval without unit", "type": "integer"}, "period": {"description": "The period/interval type", "enum": ["days", "hours", "minutes", "seconds", "microseconds"], "type": "string"}}, "required": ["every", "period"]}, "Issue": {"properties": {"closed": {"description": "The issue closing date", "format": "date-time", "type": "string"}, "closed_by": {"description": "The user who closed the issue", "type": "string"}, "created": {"description": "The issue creation date", "format": "date-time", "type": "string"}, "discussion": {"$ref": "#/definitions/IssueMessage"}, "id": {"description": "The issue identifier", "type": "string"}, "subject": {"description": "The issue target object identifier", "type": "string"}, "type": {"description": "The issue type", "enum": ["illegal", "other", "advertisement", "tendencious"], "type": "string"}, "url": {"description": "The issue API URI", "type": "object"}, "user": {"$ref": "#/definitions/UserReference", "description": "The issue author"}}, "required": ["created", "url", "discussion", "user", "type", "id", "subject"]}, "IssueMessage": {"properties": {"content": {"description": "The message body", "type": "string"}, "posted_by": {"$ref": "#/definitions/UserReference", "description": "The message author"}, "posted_on": {"description": "The message posting date", "format": "date-time", "type": "string"}}, "required": ["content", "posted_by", "posted_on"]}, "Job": {"properties": {"args": {"description": "The job execution arguments", "items": {"type": "object"}, "type": "array"}, "crontab": {"$ref": "#/definitions/Crontab"}, "description": {"description": "The job description", "type": "string"}, "enabled": {"description": "Is this job enabled", "type": "boolean"}, "id": {"description": "The job unique identifier", "type": "string"}, "interval": {"$ref": "#/definitions/Interval"}, "kwargs": {"description": "The job execution keyword arguments", "type": "object"}, "last_run_at": {"description": "The last job execution date", "format": "date-time", "type": "string"}, "last_run_id": {"description": "The last execution task id", "type": "string"}, "name": {"description": "The job unique name", "type": "string"}, "schedule": {"description": "The schedule display", "type": "string"}, "task": {"description": "The task name", "enum": ["piwik-current-metrics", "log-test", "purge-organizations", "purge-datasets", "bump-metrics", "piwik-yesterday-metrics", "purge-reuses", "error-test", "harvest", "count-tags"], "type": "string"}}, "required": ["task", "schedule", "enabled", "last_run_at", "name", "id"]}, "Member": {"properties": {"role": {"description": "The member role in the organization", "enum": ["admin", "editor"], "type": "string"}, "user": {"$ref": "#/definitions/UserReference"}}, "required": ["role"]}, "MembershipRequest": {"properties": {"comment": {"description": "A request comment from the user", "type": "string"}, "status": {"description": "The current request status", "enum": ["accepted", "pending", "refused"], "type": "string"}}, "required": ["status", "comment"]}, "MenuItem": {"properties": {"label": {"type": "string"}, "url": {"type": "string"}}}, "Metric": {"properties": {"date": {"description": "The metrics sampling date", "type": "string"}, "level": {"description": "The metrics granularity level", "enum": ["daily", "monthly"], "type": "string"}, "object_id": {"description": "The object identifier which metrics belongs to", "type": "string"}, "values": {"description": "The metrics as key-value pairs", "type": "object"}}, "required": ["date", "values", "object_id", "level"]}, "Organization": {"properties": {"created_at": {"description": "The organization creation date", "format": "date-time", "type": "string"}, "deleted": {"description": "The organization deletion date if deleted", "format": "date-time", "type": "string"}, "description": {"description": "The organization description in Markdown", "type": "string"}, "id": {"description": "The organization identifier", "type": "string"}, "last_modified": {"description": "The organization last modification date", "format": "date-time", "type": "string"}, "logo": {"description": "The organization logo URLs", "type": "object"}, "members": {"description": "The organization members", "items": {"$ref": "#/definitions/Member"}, "type": "array"}, "metrics": {"description": "The organization metrics", "type": "object"}, "name": {"description": "The organization name", "type": "string"}, "page": {"description": "The organization page URL", "type": "object"}, "slug": {"description": "The organization string used as permalink", "type": "string"}, "uri": {"description": "The organization API URI", "type": "object"}}, "required": ["description", "created_at", "page", "uri", "slug", "last_modified", "id", "name"]}, "OrganizationPage": {"properties": {"data": {"description": "The page data", "items": {"$ref": "#/definitions/Organization"}, "type": "array"}, "next_page": {"description": "The next page URL if exists", "type": "string"}, "page": {"description": "The current page", "minimum": 0, "type": "integer"}, "page_size": {"description": "The page size used for pagination", "minimum": 0, "type": "integer"}, "previous_page": {"description": "The previous page URL if exists", "type": "string"}, "total": {"description": "The total paginated items", "minimum": 0, "type": "integer"}}, "required": ["total", "page", "page_size"]}, "OrganizationReference": {"properties": {"id": {"description": "The organization identifier", "type": "string"}, "image_url": {"description": "The organization logo URL", "type": "string"}, "name": {"description": "The organization name", "type": "string"}, "page": {"description": "The organization web page URL", "type": "string"}, "uri": {"description": "The organization API URI", "type": "string"}}, "required": ["uri", "id", "page", "name"]}, "OrganizationSuggestion": {"properties": {"id": {"description": "The organization identifier", "type": "string"}, "image_url": {"description": "The organization logo URL", "type": "string"}, "name": {"description": "The organization name", "type": "string"}, "score": {"description": "The internal match score", "type": "number"}, "slug": {"description": "The organization permalink string", "type": "string"}}, "required": ["score", "slug", "name", "id"]}, "Resource": {"properties": {"checksum": {"description": "A checksum to validate file validity", "type": "string"}, "created_at": {"description": "The resource creation date", "format": "date-time", "type": "string"}, "description": {"description": "The resource markdown description", "type": "string"}, "format": {"description": "The resource format", "type": "string"}, "id": {"description": "The resource unique ID", "type": "string"}, "last_modified": {"description": "The resource last modification date", "format": "date-time", "type": "string"}, "title": {"description": "The resource title", "type": "string"}, "type": {"description": "Whether the resource is an uploaded file, a remote file or an API", "enum": ["file", "remote", "api"], "type": "string"}, "url": {"description": "The resource URL", "type": "string"}}, "required": ["title", "url", "created_at", "format", "last_modified", "type", "id"]}, "Reuse": {"properties": {"created_at": {"description": "The reuse creation date", "format": "date-time", "type": "string"}, "datasets": {"description": "The reused datasets", "items": {"$ref": "#/definitions/DatasetReference"}, "type": "array"}, "deleted": {"description": "The organization identifier", "format": "date-time", "type": "string"}, "description": {"description": "The reuse description in Markdown", "type": "string"}, "featured": {"description": "Is the reuse featured", "type": "boolean"}, "id": {"description": "The reuse identifier", "type": "string"}, "image_url": {"description": "The reuse thumbnail", "type": "string"}, "last_modified": {"description": "The reuse last modification date", "format": "date-time", "type": "string"}, "metrics": {"description": "The reuse metrics", "type": "object"}, "organization": {"$ref": "#/definitions/OrganizationReference", "description": "The publishing organization"}, "page": {"description": "The reuse page URL", "type": "object"}, "slug": {"description": "The reuse permalink string", "type": "string"}, "title": {"description": "The reuse title", "type": "string"}, "type": {"description": "The reuse type", "enum": ["visualization", "api", "idea", "application", "paper", "news_article", "post"], "type": "string"}, "uri": {"description": "The reuse API URI", "type": "object"}}, "required": ["description", "title", "deleted", "created_at", "uri", "slug", "last_modified", "type", "id", "page"]}, "ReusePage": {"properties": {"data": {"description": "The page data", "items": {"$ref": "#/definitions/Reuse"}, "type": "array"}, "next_page": {"description": "The next page URL if exists", "type": "string"}, "page": {"description": "The current page", "minimum": 0, "type": "integer"}, "page_size": {"description": "The page size used for pagination", "minimum": 0, "type": "integer"}, "previous_page": {"description": "The previous page URL if exists", "type": "string"}, "total": {"description": "The total paginated items", "minimum": 0, "type": "integer"}}, "required": ["total", "page", "page_size"]}, "ReuseSuggestion": {"properties": {"id": {"description": "The reuse identifier", "type": "string"}, "image_url": {"description": "The reuse thumbnail URL", "type": "string"}, "score": {"description": "The internal match score", "type": "number"}, "slug": {"description": "The reuse permalink string", "type": "string"}, "title": {"description": "The reuse title", "type": "string"}}, "required": ["title", "score", "slug", "id"]}, "Site": {"properties": {"configs": {"description": "The associated configurations", "type": "object"}, "id": {"description": "The Site unique identifier", "type": "string"}, "metrics": {"description": "The associated metrics", "type": "object"}, "title": {"description": "The site display title", "type": "string"}}, "required": ["id", "title"]}, "SpatialCoverage": {"properties": {"geom": {"$ref": "#/definitions/GeoJSON", "description": "A multipolygon for the whole coverage"}, "granularity": {"description": "The spatial/territorial granularity", "enum": ["town", "iris", "other", "poi", "country", "region", "epci", "county", "canton"], "type": "string"}, "territories": {"description": "The covered teritories", "items": {"$ref": "#/definitions/TerritoryReference"}, "type": "array"}}}, "SpatialGranularity": {"properties": {"id": {"description": "The granularity identifier", "type": "string"}, "label": {"description": "The granularity name", "type": "string"}}, "required": ["id", "label"]}, "Task": {"properties": {"exc": {"description": "The exception thrown during execution", "type": "string"}, "id": {"description": "Tha task execution ID", "type": "string"}, "result": {"description": "The task results if exists", "type": "string"}, "status": {"description": "Cron expression for hour", "enum": ["RECEIVED", "RETRY", "REVOKED", "SUCCESS", "STARTED", "FAILURE", "PENDING"], "type": "string"}, "traceback": {"description": "The execution traceback", "type": "string"}}, "required": ["status", "id"]}, "TemporalCoverage": {"properties": {"end": {"description": "The temporal coverage end date", "format": "date-time", "type": "string"}, "start": {"description": "The temporal coverage start date", "format": "date-time", "type": "string"}}, "required": ["start", "end"]}, "TerritoryLevel": {"properties": {"children": {"description": "The known children levels", "items": {"type": "string"}, "type": "array"}, "id": {"description": "The level identifier", "type": "string"}, "label": {"description": "The level name", "type": "string"}, "parent": {"description": "The parent level", "type": "string"}, "position": {"description": "The position in the level tree (top is zero)", "minimum": 0, "type": "integer"}}, "required": ["position", "label", "id"]}, "TerritoryReference": {"properties": {"code": {"description": "The territory code (depends on level)", "type": "string"}, "id": {"description": "The territory identifier", "type": "string"}, "level": {"description": "The territory level identifier", "type": "string"}, "name": {"description": "The territory name", "type": "string"}}, "required": ["code", "id", "name", "level"]}, "TerritorySuggestion": {"properties": {"code": {"description": "The territory main code", "type": "string"}, "id": {"description": "The territory identifier", "type": "string"}, "keys": {"description": "The territory known codes", "type": "object"}, "level": {"description": "The territory administrative level", "type": "string"}, "name": {"description": "The territory name", "type": "string"}, "score": {"description": "The internal match score", "type": "number"}}, "required": ["code", "name", "level", "score", "id"]}, "User": {"properties": {"about": {"description": "The user self description", "type": "string"}, "avatar_url": {"description": "The user avatar URL", "type": "string"}, "email": {"description": "The user email", "type": "string"}, "first_name": {"description": "The user first name", "type": "string"}, "id": {"description": "The user identifier", "type": "string"}, "last_name": {"description": "The user last name", "type": "string"}, "metrics": {"description": "Th last user metrics", "type": "object"}, "organizations": {"description": "The organization the user belongs to", "items": {"$ref": "#/definitions/OrganizationReference"}, "type": "array"}, "since": {"description": "The registeration date", "format": "date-time", "type": "string"}, "slug": {"description": "The user permalink string", "type": "string"}, "website": {"description": "The user website", "type": "string"}}, "required": ["last_name", "since", "first_name", "slug", "email", "id"]}, "UserReference": {"properties": {"avatar_url": {"description": "The user avatar URL", "type": "string"}, "first_name": {"description": "The user first name", "type": "string"}, "id": {"description": "The user identifier", "type": "string"}, "last_name": {"description": "The user larst name", "type": "string"}, "page": {"description": "The user profile page URL", "type": "string"}}, "required": ["first_name", "last_name", "id", "page"]}, "UserSuggestion": {"properties": {"avatar_url": {"description": "The user avatar URL", "type": "string"}, "fullname": {"description": "The user fullname", "type": "string"}, "id": {"description": "The user identifier", "type": "string"}, "score": {"description": "The internal match score", "type": "number"}, "slug": {"description": "The user permalink string", "type": "string"}}, "required": ["fullname", "score", "id", "slug"]}}, "info": {"description": "uData API", "title": "uData API", "version": "1.0"}, "paths": {"/admin/layout/": {"get": {"operationId": "get_admin_layout", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/MenuItem"}, "type": "array"}}}, "summary": "Get the Admin menu layout", "tags": ["admin"]}}, "/admin/menu/": {"get": {"operationId": "get_admin_menu", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/MenuItem"}, "type": "array"}}}, "summary": "Get the Admin menu layout", "tags": ["admin"]}}, "/datasets/": {"get": {"operationId": "list_datasets", "parameters": [{"enum": ["created", "followers", "reuses", "last_modified", "title", "-created", "-followers", "-reuses", "-last_modified", "-title"], "in": "query", "name": "sort", "type": "string"}, {"in": "query", "name": "license", "type": "string"}, {"in": "query", "name": "extra", "type": "string"}, {"in": "query", "name": "format", "type": "string"}, {"in": "query", "name": "temporal_coverage", "type": "string"}, {"in": "query", "name": "featured", "type": "string"}, {"in": "query", "name": "tag", "type": "string"}, {"default": 20, "description": "The page size", "in": "query", "name": "page_size", "type": "integer"}, {"in": "query", "name": "granularity", "type": "string"}, {"in": "query", "name": "supplier", "type": "string"}, {"in": "query", "name": "organization", "type": "string"}, {"in": "query", "name": "territory", "type": "string"}, {"description": "The page to display", "in": "query", "name": "page", "type": "integer"}, {"in": "query", "name": "reuses", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/DatasetPage"}}}, "summary": "List all objects", "tags": ["datasets"]}, "post": {"operationId": "create_dataset", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Dataset"}}, "400": {"description": "Validation error"}}, "summary": "Create a new object", "tags": ["datasets"]}}, "/datasets/{dataset}/": {"delete": {"operationId": "delete_dataset_api", "parameters": [{"description": "The dataset ID or slug", "in": "path", "name": "dataset", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"type": "void"}}, "204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "summary": "Delete a given object", "tags": ["datasets"]}, "get": {"operationId": "get_dataset", "parameters": [{"description": "The dataset ID or slug", "in": "path", "name": "dataset", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Dataset"}}, "404": {"description": "Object not found"}}, "summary": "Get a given object", "tags": ["datasets"]}, "put": {"operationId": "update_dataset", "parameters": [{"description": "The dataset ID or slug", "in": "path", "name": "dataset", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Dataset"}}, "400": {"description": "Validation error"}, "404": {"description": "Object not found"}}, "summary": "Update a given object", "tags": ["datasets"]}}, "/datasets/{dataset}/featured/": {"delete": {"operationId": "unfeature_reuse", "parameters": [{"description": "The dataset ID or slug", "in": "path", "name": "dataset", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Dataset"}}}, "summary": "Unmark the dataset as featured", "tags": ["datasets"]}, "post": {"operationId": "feature_dataset", "parameters": [{"description": "The dataset ID or slug", "in": "path", "name": "dataset", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Dataset"}}}, "summary": "Mark the dataset as featured", "tags": ["datasets"]}}, "/datasets/{dataset}/resources/": {"post": {"operationId": "create_resource", "parameters": [{"description": "The dataset ID or slug", "in": "path", "name": "dataset", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Resource"}}}, "summary": "Create a new resource for a given dataset", "tags": ["datasets"]}}, "/datasets/{dataset}/resources/{rid}/": {"delete": {"operationId": "delete_resource", "parameters": [{"description": "The resource unique identifier", "in": "path", "name": "rid", "required": true, "type": "string"}, {"description": "The dataset ID or slug", "in": "path", "name": "dataset", "required": true, "type": "string"}], "responses": {"200": {"description": "Success"}}, "summary": "Delete a given resource on a given dataset", "tags": ["datasets"]}, "put": {"operationId": "update_resource", "parameters": [{"description": "The resource unique identifier", "in": "path", "name": "rid", "required": true, "type": "string"}, {"description": "The dataset ID or slug", "in": "path", "name": "dataset", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Resource"}}}, "summary": "Update a given resource on a given dataset", "tags": ["datasets"]}}, "/datasets/{id}/follow/": {"delete": {"operationId": "delete_follow_dataset_api", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success"}}, "summary": "Unfollow an object given its ID", "tags": ["datasets"]}, "post": {"operationId": "post_follow_dataset_api", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success"}}, "summary": "Follow an object given its ID", "tags": ["datasets"]}}, "/datasets/{id}/issues/": {"get": {"operationId": "list_issues_for", "parameters": [{"description": "The dataset ID", "in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Issue"}, "type": "array"}}}, "summary": "List all Issues for an object given its ID", "tags": ["datasets"]}, "post": {"operationId": "create_issue_for", "parameters": [{"description": "The dataset ID", "in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Issue"}}}, "summary": "Create a new Issue for an object given its ID", "tags": ["datasets"]}}, "/harvest/source/{ident}": {"get": {"operationId": "get_source", "parameters": [{"description": "A source ID or slug", "in": "path", "name": "ident", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/HarvestSource"}}}, "summary": "Get a single source given an ID or a slug", "tags": ["harvest"]}}, "/harvest/source/{ident}/jobs/": {"get": {"operationId": "list_jobs", "parameters": [{"in": "path", "name": "ident", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/HarvestJob"}, "type": "array"}}}, "summary": "List all jobs for a given source", "tags": ["harvest"]}}, "/harvest/sources/": {"get": {"operationId": "list_sources", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/HarvestSource"}, "type": "array"}}}, "summary": "List all harvest sources", "tags": ["harvest"]}, "post": {"operationId": "create_source", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/HarvestSource"}}}, "summary": "Create a new harvests source", "tags": ["harvest"]}}, "/issues/for/{id}/": {"get": {"operationId": "list_issues_for", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Issue"}, "type": "array"}}}, "summary": "List all Issues for an object given its ID", "tags": ["issues"]}, "post": {"operationId": "create_issue_for", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Issue"}}}, "summary": "Create a new Issue for an object given its ID", "tags": ["issues"]}}, "/issues/{id}/": {"get": {"operationId": "get_issue", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Issue"}}}, "summary": "Get an issue given its ID", "tags": ["issues"]}, "post": {"operationId": "comment_issue", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Issue"}}}, "summary": "Add comment and optionally close an issue given its ID", "tags": ["issues"]}}, "/jobs/": {"get": {"operationId": "list_jobs", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Job"}, "type": "array"}}}, "summary": "List all scheduled jobs", "tags": ["site"]}, "post": {"operationId": "post_jobs_api", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Job"}}}, "summary": "Create a new scheduled job", "tags": ["site"]}}, "/jobs/{id}": {"delete": {"operationId": "delete_job_api", "parameters": [{"description": "A job ID", "in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"204": {"description": "Successfuly deleted"}}, "summary": "Delete a single scheduled job", "tags": ["site"]}, "get": {"operationId": "get_job_api", "parameters": [{"description": "A job ID", "in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Job"}}}, "summary": "Fetch a single scheduled job", "tags": ["site"]}, "put": {"operationId": "put_job_api", "parameters": [{"description": "A job ID", "in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Job"}}}, "summary": "Update a single scheduled job", "tags": ["site"]}}, "/me/": {"delete": {"operationId": "delete_me_api", "responses": {"200": {"description": "Success", "schema": {"type": "void"}}, "204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "summary": "Delete a given object", "tags": ["site"]}, "get": {"operationId": "get_me", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/User"}}, "404": {"description": "Object not found"}}, "summary": "Get a given object", "tags": ["site"]}, "put": {"operationId": "put_me_api", "responses": {"400": {"description": "Validation error"}, "404": {"description": "Object not found"}}, "summary": "Update a given object", "tags": ["site"]}}, "/me/reuses/": {"get": {"operationId": "get_my_reuses_api", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Reuse"}, "type": "array"}}}, "summary": "List all my reuses (including private ones)", "tags": ["site"]}}, "/metrics/{id}": {"get": {"description": "If day is set, start and end will be ignored", "operationId": "metrics_for", "parameters": [{"description": "Start of the period to fetch", "in": "query", "name": "start", "type": "string"}, {"description": "End of the period to fetch", "in": "query", "name": "end", "type": "string"}, {"description": "The object ID to fetch metric for", "in": "path", "name": "id", "required": true, "type": "string"}, {"description": "Specific day date to fetch", "in": "query", "name": "day", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Metric"}, "type": "array"}}}, "summary": "Fetch metrics for an object given its ID", "tags": ["site"]}}, "/organizations/": {"get": {"operationId": "get_organization_list_api", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/OrganizationPage"}}}, "summary": "List all objects", "tags": ["organizations"]}, "post": {"operationId": "post_organization_list_api", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Organization"}}, "400": {"description": "Validation error"}}, "summary": "Create a new object", "tags": ["organizations"]}}, "/organizations/{id}/follow/": {"delete": {"operationId": "delete_follow_org_api", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success"}}, "summary": "Unfollow an object given its ID", "tags": ["organizations"]}, "post": {"operationId": "post_follow_org_api", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success"}}, "summary": "Follow an object given its ID", "tags": ["organizations"]}}, "/organizations/{org}/": {"delete": {"operationId": "delete_organization_api", "parameters": [{"description": "The organization ID or slug", "in": "path", "name": "org", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"type": "void"}}, "204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "summary": "Delete a given object", "tags": ["organizations"]}, "get": {"operationId": "get_organization", "parameters": [{"description": "The organization ID or slug", "in": "path", "name": "org", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Organization"}}, "404": {"description": "Object not found"}}, "summary": "Get a given object", "tags": ["organizations"]}, "put": {"operationId": "update_organization", "parameters": [{"description": "The organization ID or slug", "in": "path", "name": "org", "required": true, "type": "string"}, {"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/Organization"}, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Organization"}}, "400": {"description": "Validation error"}, "404": {"description": "Object not found"}}, "summary": "Update a given object", "tags": ["organizations"]}}, "/organizations/{org}/membership/": {"post": {"operationId": "post_membership_request_api", "parameters": [{"description": "The organization ID or slug", "in": "path", "name": "org", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MembershipRequest"}}}, "summary": "Apply for membership to a given organization", "tags": ["organizations"]}}, "/organizations/{org}/membership/{id}/accept/": {"post": {"operationId": "post_membership_accept_api", "parameters": [{"description": "The organization ID or slug", "in": "path", "name": "org", "required": true, "type": "string"}, {"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Member"}}}, "summary": "Accept user membership to a given organization", "tags": ["organizations"]}}, "/organizations/{org}/membership/{id}/refuse/": {"post": {"operationId": "post_membership_refuse_api", "parameters": [{"description": "The organization ID or slug", "in": "path", "name": "org", "required": true, "type": "string"}, {"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success"}}, "summary": "Refuse user membership to a given organization", "tags": ["organizations"]}}, "/references/harvest/backends/": {"get": {"operationId": "get_list_backend_api", "responses": {"200": {"description": "Success", "schema": {"items": {"type": "string"}, "type": "array"}}}, "summary": "List all available harvesters", "tags": ["references"]}}, "/references/harvest/job_status": {"get": {"operationId": "get_list_harvester_api", "responses": {"200": {"description": "Success", "schema": {"items": {"type": "string"}, "type": "array"}}}, "summary": "List all available harvesters", "tags": ["references"]}}, "/references/jobs": {"get": {"operationId": "get_jobs_reference_api", "responses": {"200": {"description": "Success", "schema": {"items": {"type": "string"}, "type": "array"}}}, "summary": "List all schedulable jobs", "tags": ["references"]}}, "/references/spatial/granularities/": {"get": {"operationId": "get_spatial_granularities_api", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/SpatialGranularity"}, "type": "array"}}}, "summary": "List all known spatial granularities", "tags": ["references"]}}, "/references/spatial/levels/": {"get": {"operationId": "get_territory_levels_api", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/TerritoryLevel"}, "type": "array"}}}, "summary": "List all known levels", "tags": ["references"]}}, "/reuses/": {"get": {"operationId": "list_reuses", "parameters": [{"enum": ["followers", "created", "datasets", "last_modified", "title", "-followers", "-created", "-datasets", "-last_modified", "-title"], "in": "query", "name": "sort", "type": "string"}, {"in": "query", "name": "datasets", "type": "string"}, {"in": "query", "name": "extra", "type": "string"}, {"default": 20, "description": "The page size", "in": "query", "name": "page_size", "type": "integer"}, {"in": "query", "name": "featured", "type": "string"}, {"in": "query", "name": "tag", "type": "string"}, {"in": "query", "name": "followers", "type": "string"}, {"in": "query", "name": "organization", "type": "string"}, {"in": "query", "name": "type", "type": "string"}, {"description": "The page to display", "in": "query", "name": "page", "type": "integer"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ReusePage"}}}, "summary": "List all objects", "tags": ["reuses"]}, "post": {"operationId": "create_reuse", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Reuse"}}, "400": {"description": "Validation error"}}, "summary": "Create a new object", "tags": ["reuses"]}}, "/reuses/{id}/follow/": {"delete": {"operationId": "delete_follow_reuse_api", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success"}}, "summary": "Unfollow an object given its ID", "tags": ["reuses"]}, "post": {"operationId": "post_follow_reuse_api", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success"}}, "summary": "Follow an object given its ID", "tags": ["reuses"]}}, "/reuses/{id}/issues/": {"get": {"operationId": "list_issues_for", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Issue"}, "type": "array"}}}, "summary": "List all Issues for an object given its ID", "tags": ["reuses"]}, "post": {"operationId": "create_issue_for", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Issue"}}}, "summary": "Create a new Issue for an object given its ID", "tags": ["reuses"]}}, "/reuses/{reuse}/": {"delete": {"operationId": "delete_reuse_api", "parameters": [{"description": "The reuse ID or slug", "in": "path", "name": "reuse", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"type": "void"}}, "204": {"description": "Object deleted"}, "404": {"description": "Object not found"}}, "summary": "Delete a given object", "tags": ["reuses"]}, "get": {"operationId": "get_reuse", "parameters": [{"description": "The reuse ID or slug", "in": "path", "name": "reuse", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Reuse"}}, "404": {"description": "Object not found"}}, "summary": "Get a given object", "tags": ["reuses"]}, "put": {"operationId": "update_reuse", "parameters": [{"description": "The reuse ID or slug", "in": "path", "name": "reuse", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Reuse"}}, "400": {"description": "Validation error"}, "404": {"description": "Object not found"}}, "summary": "Update a given object", "tags": ["reuses"]}}, "/reuses/{reuse}/featured/": {"delete": {"operationId": "unfeature_reuse", "parameters": [{"description": "The reuse ID or slug", "in": "path", "name": "reuse", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Reuse"}}}, "summary": "Unmark a reuse as featured", "tags": ["reuses"]}, "post": {"operationId": "feature_reuse", "parameters": [{"description": "The reuse ID or slug", "in": "path", "name": "reuse", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Reuse"}}}, "summary": "Mark a reuse as featured", "tags": ["reuses"]}}, "/site/": {"get": {"operationId": "get_site", "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/Site"}, "type": "array"}}}, "summary": "List all scheduled jobs", "tags": ["site"]}}, "/spatial/coverage/{level}/": {"get": {"operationId": "get_spatial_coverage_api", "parameters": [{"in": "path", "name": "level", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/GeoJSONFeatureCollection"}, "type": "array"}}}, "tags": ["site"]}}, "/suggest/datasets": {"get": {"operationId": "get_suggest_datasets_api", "parameters": [{"description": "The string to autocomplete/suggest", "in": "query", "name": "q", "required": true, "type": "string"}, {"default": 8, "description": "The amount of suggestion to fetch", "in": "query", "name": "size", "type": "integer"}], "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/DatasetSuggestion"}, "type": "array"}}}, "summary": "Suggest datasets", "tags": ["suggest"]}}, "/suggest/formats": {"get": {"operationId": "get_suggest_formats_api", "parameters": [{"description": "The string to autocomplete/suggest", "in": "query", "name": "q", "required": true, "type": "string"}, {"default": 8, "description": "The amount of suggestion to fetch", "in": "query", "name": "size", "type": "integer"}], "responses": {"200": {"description": "Success"}}, "summary": "Suggest file formats", "tags": ["suggest"]}}, "/suggest/organizations": {"get": {"operationId": "get_suggest_orgs_api", "parameters": [{"description": "The string to autocomplete/suggest", "in": "query", "name": "q", "required": true, "type": "string"}, {"default": 8, "description": "The amount of suggestion to fetch", "in": "query", "name": "size", "type": "integer"}], "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/OrganizationSuggestion"}, "type": "array"}}}, "summary": "Suggest organizations", "tags": ["suggest"]}}, "/suggest/reuses": {"get": {"operationId": "get_suggest_reuses_api", "parameters": [{"description": "The string to autocomplete/suggest", "in": "query", "name": "q", "required": true, "type": "string"}, {"default": 8, "description": "The amount of suggestion to fetch", "in": "query", "name": "size", "type": "integer"}], "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/ReuseSuggestion"}, "type": "array"}}}, "summary": "Suggest reuses", "tags": ["suggest"]}}, "/suggest/tags": {"get": {"operationId": "get_suggest_tags_api", "parameters": [{"description": "The string to autocomplete/suggest", "in": "query", "name": "q", "required": true, "type": "string"}, {"default": 8, "description": "The amount of suggestion to fetch", "in": "query", "name": "size", "type": "integer"}], "responses": {"200": {"description": "Success"}}, "summary": "Suggest tags", "tags": ["suggest"]}}, "/suggest/territories": {"get": {"operationId": "get_suggest_territories_api", "parameters": [{"description": "The string to autocomplete/suggest", "in": "query", "name": "q", "required": true, "type": "string"}, {"default": 8, "description": "The amount of suggestion to fetch", "in": "query", "name": "size", "type": "integer"}], "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/TerritorySuggestion"}, "type": "array"}}}, "summary": "Suggest territories", "tags": ["suggest"]}}, "/suggest/users": {"get": {"operationId": "get_suggest_users_api", "parameters": [{"description": "The string to autocomplete/suggest", "in": "query", "name": "q", "required": true, "type": "string"}, {"default": 8, "description": "The amount of suggestion to fetch", "in": "query", "name": "size", "type": "integer"}], "responses": {"200": {"description": "Success", "schema": {"items": {"$ref": "#/definitions/UserSuggestion"}, "type": "array"}}}, "summary": "Suggest users", "tags": ["suggest"]}}, "/tasks/{id}": {"get": {"operationId": "get_task_api", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Task"}}}, "summary": "Get a tasks status given its ID", "tags": ["site"]}}, "/users/{id}/follow/": {"delete": {"operationId": "delete_follow_user_api", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success"}}, "summary": "Unfollow an object given its ID", "tags": ["users"]}, "post": {"operationId": "post_follow_user_api", "parameters": [{"in": "path", "name": "id", "required": true, "type": "string"}], "responses": {"200": {"description": "Success"}}, "summary": "Follow an user given its ID", "tags": ["users"]}}}, "produces": ["application/json"], "securityDefinitions": {"apikey": {"keyname": "X-API-KEY", "passAs": "header", "type": "apiKey"}}, "swagger": "2.0", "tags": [{"description": "Site global namespace", "name": "site"}, {"description": "References lists", "name": "references"}, {"description": "User related operations", "name": "users"}, {"description": "Issue related operations", "name": "issues"}, {"description": "Dataset related operations", "name": "datasets"}, {"description": "Reuse related operations", "name": "reuses"}, {"description": "Organization related operations", "name": "organizations"}, {"description": "Completion suggester APIs", "name": "suggest"}, {"description": "Harvest related operations", "name": "harvest"}, {"description": "Admin related operations", "name": "admin"}]}
